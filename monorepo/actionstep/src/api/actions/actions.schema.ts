/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

// eslint-disable-next-line @typescript-eslint/no-namespace
export namespace Actions {
  export interface paths {
    '/actions': {
      /** @description Returns a collection of Matters. For information on how to construct requests filtering by various properties on a Matter please refer to the API Developer Portal. */
      get: {
        responses: {
          /** @description OK. */
          200: {
            content: {
              'application/json':
                | components['schemas']['PagedActions']
                | components['schemas']['SingleAction']
            }
          }
        }
      }
    }
    '/actions/{id}': {
      /** @description Returns a single Matter. */
      get: {
        parameters: {
          path: {
            /**
             * @description Unique identifier for a Matter.
             * @example 113
             */
            id: number
          }
        }
        responses: {
          /** @description OK. */
          200: {
            content: {
              'application/json': components['schemas']['SingleAction']
            }
          }
        }
      }
      /** @description Update the properties of a Matter. */
      put: {
        parameters: {
          path: {
            /**
             * @description Unique identifier for a Matter.
             * @example 113
             */
            id: number
          }
        }
        requestBody: components['requestBodies']['UpdateAction']
        responses: {
          /** @description OK. */
          200: {
            content: {
              'application/json': components['schemas']['SingleAction']
            }
          }
        }
      }
    }
  }

  export type webhooks = Record<string, never>

  export interface components {
    schemas: {
      SingleAction: {
        actions?: components['schemas']['Action']
        meta?: components['schemas']['PageMetaData']
      }
      PagedActions: {
        actions?: components['schemas']['Action'][]
        meta?: components['schemas']['PageMetaData']
      }
      PageMetaData: {
        paging?: components['schemas']['PagingData']
      }
      PagingData: {
        actions?: components['schemas']['ActionPageData']
      }
      Update: {
        actions: components['schemas']['UpdateAction']
      }
      ActionPageData: {
        /**
         * @description The total number of Matters returned by the underlying query.
         * @example 360
         */
        recordCount?: number
        /**
         * @description The total number of pages generated by the underlying query.
         * @example 8
         */
        pageCount?: number
        /**
         * @description The page number for this page of Matters.
         * @example 2
         */
        page?: number
        /**
         * @description Page size.
         * @example 50
         */
        pageSize?: number
        /**
         * @description A URL to the previous page of Matters.
         * @example https://ap-southeast-2.actionstep.com/api/rest/actions?page=1
         */
        prevPage?: string
        /**
         * @description A URL to the next page of Matters.
         * @example https://ap-southeast-2.actionstep.com/api/rest/actions?page=3
         */
        nextPage?: string
      }
      Action: {
        /**
         * @description Unique identifier for the Matter.
         * @example 113
         */
        id?: number
        /**
         * @description Name of the Matter.
         * @example Purchase of property at 222 Beach Road.
         */
        name?: string
        /**
         * @description Matter reference.
         * @example AB8383/GD
         */
        reference?: string
        /**
         * @description Matter priority.
         * @example 2
         */
        priority?: number
        /**
         * @description Matter status.
         * @example Active
         * @enum {string}
         */
        status?: 'Active' | 'Inactive' | 'Template' | 'Closed'
        /**
         * Format: timestamp
         * @description Timestamp when the status was last updated.
         * @example "2022-05-03T08:49:15.000Z"
         */
        statusTimestamp?: string
        /**
         * @description Flag to indicate if the Matter billing can be overridden, True (T) or False (F).
         * @example F
         */
        isBillableOverride?: string
        /**
         * Format: timestamp
         * @description Timestamp when the Matter was created.
         * @example "2022-04-03T08:32:15.000Z"
         */
        createdTimestamp?: string
        /**
         * Format: timestamp
         * @description Timestamp when the Matter was last modified.
         * @example "2022-05-03T08:49:15.000Z"
         */
        modifiedTimestamp?: string
        /**
         * @description Flag to indicate if the Matter is deleted, True (T) or False (F).
         * @example F
         */
        isDeleted?: string
        /**
         * @description The Actionstep User who deleted the Matter.
         * @example Mocke, Rogan
         */
        deletedBy?: string
        /**
         * Format: timestamp
         * @description Timestamp when the Matter was deleted.
         * @example null
         */
        deletedTimestamp?: string
        /**
         * @description Flag to indicate if the Matter has been marked as a favourite, True (T) or False (F).
         * @example F
         */
        isFavorite?: string
        /**
         * @description Billing status if Matter billing has been overridden.
         * @example Active
         * @enum {string}
         */
        overrideBillingStatus?: 'Active' | 'Closed'
        /**
         * Format: timestamp
         * @description Timestamp when the Matter was last accessed.
         * @example "2022-05-03T08:49:15.000Z"
         */
        lastAccessTimestamp?: string
        /**
         * @description Reference data typically used when importing data from an external source.
         * @example null
         */
        importExternalReference?: string
        links?: components['schemas']['ActionsLinks']
      }
      ActionsLinks: {
        /**
         * @description Unique identifier of the user to whom the Matter is assigned.
         * @example 39
         */
        assignedTo?: number
        /**
         * @description Unique identifier of the division owning the Matter.
         * @example 4
         */
        division?: number
        /**
         * @description Unique identifier of the Matter type.
         * @example 6
         */
        actionType?: number
        /**
         * @description Unique identifiers of the primary participants to the Matter.
         * @example [
         *   56,
         *   60
         * ]
         */
        primaryParticipants?: number
        /**
         * @description Unique identifier of the current workflow step applicable to the Matter.
         * @example 21--2
         */
        step?: string
        /**
         * @description Unique identifier of the bill settings applicable to the Matter.
         * @example 2
         */
        billSettings?: number
        /**
         * @description Unique identifiers for any related Matters.
         * @example [
         *   216
         * ]
         */
        relatedActions?: number
      }
      UpdateAction: {
        /**
         * @description Name of the Matter.
         * @example Purchase of property at 222 Beach Road.
         */
        name?: string
        /**
         * @description Matter reference.
         * @example AB8383/GD
         */
        reference?: string
        /**
         * @description Matter priority.
         * @example 2
         */
        priority?: number
        /**
         * @description Matter status.
         * @example Active
         * @enum {string}
         */
        status?: 'Active' | 'Inactive' | 'Template' | 'Closed'
        /**
         * @description Is override billable, True (T) or False (F).
         * @example F
         */
        isBillableOverride?: string
        /**
         * @description Override the billing status.
         * @example Active
         * @enum {string}
         */
        overrideBillingStatus?: 'Active' | 'Closed'
        /**
         * @description Reference data typically used when importing data from an external source.
         * @example null
         */
        importExternalReference?: string
        links?: components['schemas']['UpdateActionLinks']
      }
      UpdateActionLinks: {
        /**
         * @description Unique identifier of the user to whom the Matter is assigned.
         * @example 39
         */
        assignedTo?: number
        /**
         * @description Unique identifier of the division owning the Matter.
         * @example 4
         */
        division?: number
      }
    }
    responses: never
    parameters: never
    requestBodies: {
      UpdateAction?: {
        content: {
          'application/json': components['schemas']['Update']
        }
      }
    }
    headers: never
    pathItems: never
  }

  export type $defs = Record<string, never>

  export type external = Record<string, never>

  export type operations = Record<string, never>
}
